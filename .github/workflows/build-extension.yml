name: Build Phobos Extension

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Build extension
      run: |
        python build_extension.py

    - name: Verify build output
      run: |
        ls -lh dist/
        if [ ! -f "dist/phobos_4.zip" ]; then
          echo "Error: phobos_4.zip not found!"
          exit 1
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: phobos-4-extension
        path: dist/phobos_4.zip
        retention-days: 30

    - name: Create build info
      run: |
        echo "Build Information" > dist/BUILD_INFO.txt
        echo "=================" >> dist/BUILD_INFO.txt
        echo "Build Date: $(date)" >> dist/BUILD_INFO.txt
        echo "Commit SHA: ${{ github.sha }}" >> dist/BUILD_INFO.txt
        echo "Ref: ${{ github.ref }}" >> dist/BUILD_INFO.txt
        echo "Extension: phobos_4.zip" >> dist/BUILD_INFO.txt

    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: build-info
        path: dist/BUILD_INFO.txt
        retention-days: 30

  # Only run release job on tags
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: phobos-4-extension
        path: dist/

    - name: Download build info
      uses: actions/download-artifact@v4
      with:
        name: build-info
        path: dist/

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create Release Notes
      id: release_notes
      run: |
        cat > RELEASE_NOTES.md << 'EOF'
        # Phobos 4.x - Blender Extension Release ${{ steps.get_version.outputs.VERSION }}

        ## Installation

        1. Download `phobos_4.zip` below
        2. In Blender 4.2+: `Edit` → `Preferences` → `Get Extensions`
        3. Click dropdown (top right) → `Install from Disk`
        4. Select the downloaded `phobos_4.zip`
        5. The extension will install and register automatically

        ## What's Included

        - ✅ Full Blender 4.2+ / 5.0 compatibility
        - ✅ Native extension system integration
        - ✅ All Phobos features for robot model editing
        - ✅ URDF/SMURF export and import
        - ✅ Material and visual editing tools

        ## Compatibility

        - **Blender 4.2, 4.3, 4.4, 4.5** - Fully tested ✅
        - **Blender 5.0** - Tested and working ✅
        - **Blender 3.x** - Not compatible (use [original Phobos](https://github.com/dfki-ric/phobos))

        ## System Requirements

        - Python 3.10+ (bundled with Blender)
        - Operating Systems: Windows, macOS, Linux

        ## Documentation

        - [Installation Guide](https://github.com/elasticdotventures/phobos-4.0/blob/main/BLENDER_4X_FORK.md)
        - [Original Phobos Wiki](https://github.com/dfki-ric/phobos/wiki)

        ## Support

        - Report issues: [GitHub Issues](https://github.com/elasticdotventures/phobos-4.0/issues)
        - Discussions: [GitHub Discussions](https://github.com/elasticdotventures/phobos-4.0/discussions)

        ---

        **Built from commit:** ${{ github.sha }}
        **Build date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/phobos_4.zip
          dist/BUILD_INFO.txt
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        name: Phobos 4.x v${{ steps.get_version.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
